name: Publish NPM Package

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: "https://registry.npmjs.org"

      - name: 🛠 Run version update script
        if: startsWith(github.ref, 'refs/tags/')
        id: version_script
        run: |
          node scripts/new-version.mjs ${{ github.ref_name }}
          git diff --quiet || echo "changed=true" >> $GITHUB_OUTPUT

      - name: 🔧 Configure Git
        if: startsWith(github.ref, 'refs/tags/') && steps.version_script.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 📤 Commit version changes
        if: startsWith(github.ref, 'refs/tags/') && steps.version_script.outputs.changed == 'true'
        run: |
          git stash -u
          git fetch origin ${{ github.event.repository.default_branch }}
          git checkout ${{ github.event.repository.default_branch }}
          git pull
          git stash pop
          git add package.json package-lock.json
          git commit -m "chore: update version to ${{ github.ref_name }}"
          git push origin ${{ github.event.repository.default_branch }}

      - name: 📌 Update tag to the latest commit
        if: startsWith(github.ref, 'refs/tags/') && steps.version_script.outputs.changed == 'true'
        run: |
          git tag -f ${{ github.ref_name }}
          git push origin -f ${{ github.ref_name }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 👷 Build Typescript app
        run: |
          npm run build

      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🛠 Generate a changelog
        if: startsWith(github.ref, 'refs/tags/')
        id: changelog
        uses: orhun/git-cliff-action@v4
        with:
          config: .github/cliff.toml
          args: -vv --current
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: 🚀 Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        run: gh release create ${GITHUB_REF_NAME} -t "Release ${GITHUB_REF_NAME}" -n "${RELEASE_BODY}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BODY: ${{ steps.changelog.outputs.content }}
